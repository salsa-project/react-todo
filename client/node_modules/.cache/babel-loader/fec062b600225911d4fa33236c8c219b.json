{"ast":null,"code":"import { fetchTodo, fetchInprogress, fetchDone } from '../requests/fetchApi'; // (function(){\n//   resultOfTodo = fetchTodo().then((result)=>{return result.reverse()})\n//   resultOfInprogress = fetchInprogress().then((result)=>{return result.reverse()})\n//   resultOfDone = fetchDone().then((result)=>{return result.reverse()})\n// })();\n\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action) => {\n  console.log(action); // console.log({...state});\n\n  if (action.type == 'add todo') {\n    return state;\n  } else {\n    return state;\n  }\n\n  switch (action.type) {\n    case 'todo-data':\n      return {};\n      break;\n\n    case 'gettodorequested':\n      break;\n\n    case 'gettodosucceeded':\n      break;\n\n    case 'gettodofailed':\n      break;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/reducers/rootReducer.js"],"names":["fetchTodo","fetchInprogress","fetchDone","initState","todo","inprogress","done","rootReducer","state","action","console","log","type"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,eAAnB,EAAoCC,SAApC,QAAoD,sBAApD,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAAlB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA6B;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAD+C,CAE/C;;AACA,MAAGA,MAAM,CAACG,IAAP,IAAe,UAAlB,EAA6B;AAC3B,WAAOJ,KAAP;AACD,GAFD,MAEK;AACH,WAAOA,KAAP;AACD;;AAED,UAAOC,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,aAAM,EAAN;AACA;;AACF,SAAK,kBAAL;AAEE;;AACF,SAAK,kBAAL;AAEE;;AACF,SAAK,eAAL;AAEE;AAZJ;AAeD,CAxBD;;AA0BA,eAAeL,WAAf","sourcesContent":["import {fetchTodo, fetchInprogress, fetchDone} from '../requests/fetchApi'\n\n\n\n// (function(){\n//   resultOfTodo = fetchTodo().then((result)=>{return result.reverse()})\n//   resultOfInprogress = fetchInprogress().then((result)=>{return result.reverse()})\n//   resultOfDone = fetchDone().then((result)=>{return result.reverse()})\n// })();\n\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action)=>{\n  console.log(action);\n  // console.log({...state});\n  if(action.type == 'add todo'){\n    return state\n  }else{\n    return state\n  }\n\n  switch(action.type){\n    case 'todo-data':\n      return{}\n      break;\n    case 'gettodorequested':\n\n      break;\n    case 'gettodosucceeded':\n\n      break;\n    case 'gettodofailed':\n\n      break;\n  }\n\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}