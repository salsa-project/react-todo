{"ast":null,"code":"import _slicedToArray from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/item.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Item() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        item = _useState2[0],\n        setItem = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        itemJSX = _useState4[0],\n        setItemJSX = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        todoInput = _useState6[0],\n        setTodoInput = _useState6[1];\n\n  const itemApiCall = async () => {\n    const response = await fetch('/items');\n    const body = await response.json();\n    if (response.status != 200) throw Error(body.message);\n    return body;\n  };\n\n  useEffect(() => {\n    itemApiCall().then(res => {\n      let itemMap = res.map(item => {\n        return {\n          body: item.body,\n          status: item.checked\n        };\n      });\n      console.log(itemMap);\n      setItem(itemMap);\n      let itemJSXMap = itemMap.map(item => {\n        return React.createElement(\"li\", {\n          class: item.status == true && \"item-checked\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, item.body);\n      });\n      setItemJSX(itemJSXMap);\n    });\n  }, []);\n\n  function inputHandleChange(e) {\n    setTodoInput(e.target.value);\n  }\n\n  function hanleAddClick(e) {\n    let newItems = [todoInput, ...item];\n    setItem(newItems);\n    let newJsxMap = newItems.map(item => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, item);\n    });\n    setItemJSX(newJsxMap);\n    setTodoInput('');\n  }\n\n  return React.createElement(\"ul\", {\n    id: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: todoInput,\n    placeholder: \"todo ..\",\n    onChange: inputHandleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: hanleAddClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Add\"), itemJSX || \"fetching data ..\");\n}\n\nexport default Item;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/item.js"],"names":["React","useState","useEffect","Item","item","setItem","itemJSX","setItemJSX","todoInput","setTodoInput","itemApiCall","response","fetch","body","json","status","Error","message","then","res","itemMap","map","checked","console","log","itemJSXMap","inputHandleChange","e","target","value","hanleAddClick","newItems","newJsxMap"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,IAAT,GAAe;AAAA,oBAEWF,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,QAENG,IAFM;AAAA,QAEAC,OAFA;;AAAA,qBAGiBJ,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,QAGNK,OAHM;AAAA,QAGGC,UAHH;;AAAA,qBAIqBN,QAAQ,CAAC,EAAD,CAJ7B;AAAA;AAAA,QAINO,SAJM;AAAA,QAIKC,YAJL;;AAMb,QAAMC,WAAW,GAAG,YAAU;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,QAAGH,QAAQ,CAACI,MAAT,IAAmB,GAAtB,EAA2B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC3B,WAAOJ,IAAP;AACD,GALD;;AAOAX,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,WAAW,GAAGQ,IAAd,CAAmBC,GAAG,IAAE;AACtB,UAAIC,OAAO,GAAGD,GAAG,CAACE,GAAJ,CAAQjB,IAAI,IAAE;AAC1B,eAAO;AACLS,UAAAA,IAAI,EAAET,IAAI,CAACS,IADN;AAELE,UAAAA,MAAM,EAAEX,IAAI,CAACkB;AAFR,SAAP;AAID,OALa,CAAd;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAf,MAAAA,OAAO,CAACe,OAAD,CAAP;AACA,UAAIK,UAAU,GAAGL,OAAO,CAACC,GAAR,CAAYjB,IAAI,IAAE;AACjC,eACE;AAAI,UAAA,KAAK,EAAGA,IAAI,CAACW,MAAL,IAAe,IAAhB,IAAyB,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqDX,IAAI,CAACS,IAA1D,CADF;AAGD,OAJgB,CAAjB;AAKAN,MAAAA,UAAU,CAACkB,UAAD,CAAV;AACD,KAfD;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAASC,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3BlB,IAAAA,YAAY,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD;;AACD,WAASC,aAAT,CAAuBH,CAAvB,EAAyB;AACvB,QAAII,QAAQ,GAAG,CAACvB,SAAD,EAAY,GAAGJ,IAAf,CAAf;AACAC,IAAAA,OAAO,CAAC0B,QAAD,CAAP;AACA,QAAIC,SAAS,GAAGD,QAAQ,CAACV,GAAT,CAAajB,IAAI,IAAE;AACjC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAL,CADF;AAGD,KAJe,CAAhB;AAKAG,IAAAA,UAAU,CAACyB,SAAD,CAAV;AACAvB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACC,SACE;AAAI,IAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAED,SAA1B;AAAqC,IAAA,WAAW,EAAC,SAAjD;AAA2D,IAAA,QAAQ,EAAEkB,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAIGxB,OAAO,IAAI,kBAJd,CADF;AAQH;;AAED,eAAeH,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction Item(){\n\n  const [item, setItem] = useState([])\n  const [itemJSX, setItemJSX] = useState('')\n  const [todoInput, setTodoInput] = useState('')\n\n  const itemApiCall = async ()=>{\n    const response = await fetch('/items');\n    const body = await response.json();\n    if(response.status != 200) throw Error(body.message)\n    return body;\n  }\n\n  useEffect(()=>{\n      itemApiCall().then(res=>{\n        let itemMap = res.map(item=>{\n          return {\n            body: item.body,\n            status: item.checked\n          }\n        })\n        console.log(itemMap);\n        setItem(itemMap)\n        let itemJSXMap = itemMap.map(item=>{\n          return (\n            <li class={(item.status == true) && \"item-checked\"}>{item.body}</li>\n          )\n        })\n        setItemJSX(itemJSXMap)\n      })\n  }, [])\n\n  function inputHandleChange(e){\n    setTodoInput(e.target.value)\n  }\n  function hanleAddClick(e){\n    let newItems = [todoInput, ...item]\n    setItem(newItems)\n    let newJsxMap = newItems.map(item=>{\n      return (\n        <li>{item}</li>\n      )\n    })\n    setItemJSX(newJsxMap)\n    setTodoInput('')\n  }\n    return(\n      <ul id=\"items\">\n        <input type=\"text\" value={todoInput} placeholder=\"todo ..\" onChange={inputHandleChange} />\n        <button onClick={hanleAddClick}>Add</button>\n\n        {itemJSX || \"fetching data ..\"}\n      </ul>\n    )\n}\n\nexport default Item\n"]},"metadata":{},"sourceType":"module"}