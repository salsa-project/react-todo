{"ast":null,"code":"const getTodos = async link => {\n  const callTodos = await fetch(link, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  });\n  const response = await callTodos.json();\n  if (callTodos.status != 200) return new Error(response.message);\n  return response.reverse();\n};\n\nlet resultTodo = getTodos('/todos').then(result => {\n  return result;\n});\nlet resultInprogress = getTodos('/inprogress').then(result => {\n  return result;\n});\nconst initState = {\n  todo: resultTodo,\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action) => {\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/reducers/rootReducer.js"],"names":["getTodos","link","callTodos","fetch","headers","response","json","status","Error","message","reverse","resultTodo","then","result","resultInprogress","initState","todo","inprogress","done","rootReducer","state","action"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAOC,IAAP,IAAc;AAC7B,QAAMC,SAAS,GAAG,MAAMC,KAAK,CAACF,IAAD,EAAO;AAChCG,IAAAA,OAAO,EAAG;AACR,sBAAgB,kBADR;AAER,gBAAU;AAFF;AADsB,GAAP,CAA7B;AAOA,QAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,IAAV,EAAvB;AAEA,MAAGJ,SAAS,CAACK,MAAV,IAAoB,GAAvB,EAA4B,OAAO,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAP;AAE5B,SAAOJ,QAAQ,CAACK,OAAT,EAAP;AACD,CAbD;;AAeA,IAAIC,UAAU,GAAGX,QAAQ,CAAC,QAAD,CAAR,CAAmBY,IAAnB,CAAwBC,MAAM,IAAG;AAAC,SAAOA,MAAP;AAAc,CAAhD,CAAjB;AACA,IAAIC,gBAAgB,GAAGd,QAAQ,CAAC,aAAD,CAAR,CAAwBY,IAAxB,CAA6BC,MAAM,IAAG;AAAC,SAAOA,MAAP;AAAc,CAArD,CAAvB;AACA,MAAME,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAEL,UADU;AAEhBM,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAAlB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA6B;AAC/C,SAAOD,KAAP;AACD,CAFD;;AAIA,eAAeD,WAAf","sourcesContent":["\nconst getTodos = async (link)=>{\n  const callTodos = await fetch(link, {\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n\n    });\n  const response = await callTodos.json();\n\n  if(callTodos.status != 200) return new Error(response.message);\n\n  return response.reverse();\n}\n\nlet resultTodo = getTodos('/todos').then(result=> {return result});\nlet resultInprogress = getTodos('/inprogress').then(result=> {return result});\nconst initState = {\n  todo: resultTodo,\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action)=>{\n  return state\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}