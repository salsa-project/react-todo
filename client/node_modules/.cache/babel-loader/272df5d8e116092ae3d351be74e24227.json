{"ast":null,"code":"import _slicedToArray from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_TODO_REQUESTED, GET_TODO_SUCCEEDED, GET_TODO_FAILED } from '../requests/fetchState';\nimport { fetchTodo } from '../requests/fetchApi';\n\nfunction Todo(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoItems = _useState2[0],\n        setTodoItems = _useState2[1];\n\n  useEffect(() => {\n    const todos = () => fetchTodo().then(result => {\n      //dispatch : add data to todo store\n      props.todoCommit({\n        type: 'todo-data',\n        body: result\n      });\n      return result.reverse().map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, item.body);\n      });\n    });\n\n    todos().then(result => {\n      setTodoItems(result); // setTimeout(()=>{\n      //   setTodoItems('')\n      // }, 3000)\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"container-title red-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Todo\"), React.createElement(\"ul\", {\n    id: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, todoItems || React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    style: {\n      color: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"fetching data..\"))));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todo: state.todo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    todoCommit: data => {\n      return dispatch(data);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/todo.js"],"names":["React","useState","useEffect","connect","GET_TODO_REQUESTED","GET_TODO_SUCCEEDED","GET_TODO_FAILED","fetchTodo","Todo","props","todoItems","setTodoItems","todos","then","result","todoCommit","type","body","reverse","map","item","id","color","mapStateToProps","state","ownProps","todo","mapDispatchToProps","dispatch","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,kBAAR,EAA4BC,kBAA5B,EAAgDC,eAAhD,QAAsE,wBAAtE;AACA,SAAQC,SAAR,QAAwB,sBAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBAGgBR,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,QAGXS,SAHW;AAAA,QAGAC,YAHA;;AAKlBT,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMU,KAAK,GAAG,MAAKL,SAAS,GAAGM,IAAZ,CAAkBC,MAAD,IAAU;AAC5C;AACAL,MAAAA,KAAK,CAACM,UAAN,CAAiB;AAACC,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,IAAI,EAAEH;AAA1B,OAAjB;AAEA,aAAOA,MAAM,CAACI,OAAP,GAAiBC,GAAjB,CAAsBC,IAAD,IAAQ;AAClC,eAAO;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACH,IAAxB,CAAP;AACD,OAFM,CAAP;AAGD,KAPkB,CAAnB;;AAQAL,IAAAA,KAAK,GAAGC,IAAR,CAAcC,MAAD,IAAU;AACrBH,MAAAA,YAAY,CAACG,MAAD,CAAZ,CADqB,CAErB;AACA;AACA;AACD,KALD;AAMD,GAfQ,EAeN,EAfM,CAAT;AAiBE,SACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,OAA8B;AAAG,IAAA,KAAK,EAAE;AAACY,MAAAA,KAAK,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9B,CADhB,CAFF,CADF;AAQH;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACzC,SAAM;AACJC,IAAAA,IAAI,EAAEF,KAAK,CAACE;AADR,GAAN;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACrC,SAAM;AACJb,IAAAA,UAAU,EAAGc,IAAD,IAAQ;AAClB,aAAOD,QAAQ,CAACC,IAAD,CAAf;AACD;AAHG,GAAN;AAKD,CAND;;AAQA,eAAe1B,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux';\n\nimport {GET_TODO_REQUESTED, GET_TODO_SUCCEEDED, GET_TODO_FAILED} from '../requests/fetchState'\nimport {fetchTodo} from '../requests/fetchApi'\n\nfunction Todo(props){\n\n  \n  const [todoItems, setTodoItems] = useState('');\n\n  useEffect(()=>{\n    const todos = ()=> fetchTodo().then((result)=>{\n      //dispatch : add data to todo store\n      props.todoCommit({type: 'todo-data', body: result})\n\n      return result.reverse().map((item)=>{\n        return <li key={item.id}>{item.body}</li>\n      })\n    })\n    todos().then((result)=>{\n      setTodoItems(result)\n      // setTimeout(()=>{\n      //   setTodoItems('')\n      // }, 3000)\n    })\n  }, [])\n\n    return(\n      <div id=\"todo-container\">\n        <p className=\"container-title red-title\">Todo</p>\n        <ul id=\"todo-list\">\n          {todoItems || <div><div id=\"spinner\"></div> <p style={{color: 'gray'}}>fetching data..</p></div>}\n        </ul>\n      </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps)=>{\n  return{\n    todo: state.todo\n  }\n}\nconst mapDispatchToProps = (dispatch)=>{\n  return{\n    todoCommit: (data)=>{\n      return dispatch(data)\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n"]},"metadata":{},"sourceType":"module"}