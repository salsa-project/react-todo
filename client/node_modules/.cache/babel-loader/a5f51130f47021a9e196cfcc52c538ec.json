{"ast":null,"code":"const getTodos = async link => {\n  const callTodos = await fetch(link);\n  const response = await callTodos.json();\n  console.log(response);\n  if (callTodos.status != 200) return new Error(response.message);\n  return response.reverse();\n};\n\nlet resultTodo = getTodos('/todos').then(result => {\n  return result;\n});\nlet resultInprogress = getTodos('/inprogress').then(result => {\n  return result;\n});\nlet resultDone = getTodos('/done').then(result => {\n  return result;\n});\nconst initState = {\n  todo: resultTodo,\n  inprogress: resultInprogress,\n  done: resultDone\n};\n\nconst rootReducer = (state = initState, action) => {\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/reducers/rootReducer.js"],"names":["getTodos","link","callTodos","fetch","response","json","console","log","status","Error","message","reverse","resultTodo","then","result","resultInprogress","resultDone","initState","todo","inprogress","done","rootReducer","state","action"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAOC,IAAP,IAAc;AAC7B,QAAMC,SAAS,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA7B;AACA,QAAMG,QAAQ,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAGF,SAAS,CAACM,MAAV,IAAoB,GAAvB,EAA4B,OAAO,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,OAAnB,CAAP;AAE5B,SAAON,QAAQ,CAACO,OAAT,EAAP;AACD,CAPD;;AASA,IAAIC,UAAU,GAAGZ,QAAQ,CAAC,QAAD,CAAR,CAAmBa,IAAnB,CAAwBC,MAAM,IAAG;AAAC,SAAOA,MAAP;AAAc,CAAhD,CAAjB;AACA,IAAIC,gBAAgB,GAAGf,QAAQ,CAAC,aAAD,CAAR,CAAwBa,IAAxB,CAA6BC,MAAM,IAAG;AAAC,SAAOA,MAAP;AAAc,CAArD,CAAvB;AACA,IAAIE,UAAU,GAAGhB,QAAQ,CAAC,OAAD,CAAR,CAAkBa,IAAlB,CAAuBC,MAAM,IAAG;AAAC,SAAOA,MAAP;AAAc,CAA/C,CAAjB;AACA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAEN,UADU;AAEhBO,EAAAA,UAAU,EAAEJ,gBAFI;AAGhBK,EAAAA,IAAI,EAAEJ;AAHU,CAAlB;;AAMA,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA6B;AAC/C,SAAOD,KAAP;AACD,CAFD;;AAIA,eAAeD,WAAf","sourcesContent":["\nconst getTodos = async (link)=>{\n  const callTodos = await fetch(link);\n  const response = await callTodos.json();\n  console.log(response);\n  if(callTodos.status != 200) return new Error(response.message);\n\n  return response.reverse();\n}\n\nlet resultTodo = getTodos('/todos').then(result=> {return result});\nlet resultInprogress = getTodos('/inprogress').then(result=> {return result});\nlet resultDone = getTodos('/done').then(result=> {return result});\nconst initState = {\n  todo: resultTodo,\n  inprogress: resultInprogress,\n  done: resultDone\n};\n\nconst rootReducer = (state = initState, action)=>{\n  return state\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}