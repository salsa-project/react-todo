{"ast":null,"code":"import _slicedToArray from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/inprogress.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchInprogress } from '../requests/fetchApi';\nimport { inprogressCommit } from '../actions/getDataActions';\nimport { GET_INPROGRESS_REQUESTED, GET_INPROGRESS_SUCCEEDED, GET_INPROGRESS_FAILED } from '../requests/fetchState';\nimport { dataStatus } from '../actions/dataStatusActions';\n\nfunction InProgress(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchedInprogress = _useState2[0],\n        setFetchedInprogress = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inProgress = _useState4[0],\n        setInProgress = _useState4[1];\n\n  useEffect(() => {\n    props.inprogressDataStatus(GET_INPROGRESS_REQUESTED);\n    const inprogresss = fetchInprogress().then(result => {\n      props.inprogressDataStatus(GET_INPROGRESS_SUCCEEDED);\n      props.inprogressCommit(result);\n    });\n  }, []);\n  useEffect(() => {\n    props.i;\n  }, [props.inprogress]);\n  useEffect(() => {\n    console.log(fetchedInprogress);\n    const data = Array.from(fetchedInprogress).map(item => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, item.body);\n    });\n    setInProgress(data);\n  }, [fetchedInprogress]);\n  return React.createElement(\"div\", {\n    id: \"inprogress-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"container-title orange-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"InProgress\"), React.createElement(\"ul\", {\n    id: \"inprogress-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.loader ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    style: {\n      color: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"fetching data..\")) : inProgress));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const inprogress = state.inprogress,\n        loader = state.loader,\n        err = state.err;\n  return {\n    inprogress: inprogress,\n    loader: loader\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inprogressCommit: data => {\n      dispatch(inprogressCommit(data));\n    },\n    inprogressDataStatus: data => {\n      dispatch(dataStatus(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InProgress);","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/inprogress.js"],"names":["React","useState","useEffect","connect","fetchInprogress","inprogressCommit","GET_INPROGRESS_REQUESTED","GET_INPROGRESS_SUCCEEDED","GET_INPROGRESS_FAILED","dataStatus","InProgress","props","fetchedInprogress","setFetchedInprogress","inProgress","setInProgress","inprogressDataStatus","inprogresss","then","result","i","inprogress","console","log","data","Array","from","map","item","id","body","loader","color","mapStateToProps","state","ownProps","err","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,wBAAR,EAAkCC,wBAAlC,EAA4DC,qBAA5D,QAAwF,wBAAxF;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA,oBAE0BV,QAAQ,CAAC,EAAD,CAFlC;AAAA;AAAA,QAEjBW,iBAFiB;AAAA,QAEEC,oBAFF;;AAAA,qBAGYZ,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGjBa,UAHiB;AAAA,QAGLC,aAHK;;AAKxBb,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAACK,oBAAN,CAA2BV,wBAA3B;AACA,UAAMW,WAAW,GAAGb,eAAe,GAAGc,IAAlB,CAAwBC,MAAD,IAAU;AACnDR,MAAAA,KAAK,CAACK,oBAAN,CAA2BT,wBAA3B;AACAI,MAAAA,KAAK,CAACN,gBAAN,CAAuBc,MAAvB;AACD,KAHmB,CAApB;AAID,GANQ,EAMN,EANM,CAAT;AAQAjB,EAAAA,SAAS,CAAC,MAAI;AACXS,IAAAA,KAAK,CAACS,CAAP;AACD,GAFQ,EAEN,CAACT,KAAK,CAACU,UAAP,CAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAI;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAYX,iBAAZ;AACA,UAAMY,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWd,iBAAX,EAA8Be,GAA9B,CAAmCC,IAAD,IAAQ;AACrD,aAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAI,CAACE,IAAxB,CAAP;AACD,KAFY,CAAb;AAGAf,IAAAA,aAAa,CAACS,IAAD,CAAb;AACD,GANQ,EAMN,CAACZ,iBAAD,CANM,CAAT;AASA,SACE;AAAK,IAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAI,IAAA,EAAE,EAAC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACoB,MAAN,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,OAA8B;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9B,CAAd,GAAmGlB,UADtG,CAFF,CADF;AAQD;;AAED,MAAMmB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAmB;AAAA,QAClCd,UADkC,GACPa,KADO,CAClCb,UADkC;AAAA,QACtBU,MADsB,GACPG,KADO,CACtBH,MADsB;AAAA,QACdK,GADc,GACPF,KADO,CACdE,GADc;AAEzC,SAAM;AACJf,IAAAA,UAAU,EAAEA,UADR;AAEJU,IAAAA,MAAM,EAAEA;AAFJ,GAAN;AAID,CAND;;AAQA,MAAMM,kBAAkB,GAAIC,QAAD,IAAY;AACrC,SAAM;AACJjC,IAAAA,gBAAgB,EAAGmB,IAAD,IAAQ;AAACc,MAAAA,QAAQ,CAACjC,gBAAgB,CAACmB,IAAD,CAAjB,CAAR;AAAiC,KADxD;AAEJR,IAAAA,oBAAoB,EAAGQ,IAAD,IAAQ;AAAEc,MAAAA,QAAQ,CAAC7B,UAAU,CAACe,IAAD,CAAX,CAAR;AAA4B;AAFxD,GAAN;AAID,CALD;;AAOA,eAAerB,OAAO,CAAC8B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C3B,UAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {fetchInprogress} from '../requests/fetchApi'\nimport {inprogressCommit} from '../actions/getDataActions'\nimport {GET_INPROGRESS_REQUESTED, GET_INPROGRESS_SUCCEEDED, GET_INPROGRESS_FAILED} from '../requests/fetchState'\nimport {dataStatus} from '../actions/dataStatusActions'\n\nfunction InProgress(props){\n\n  const [fetchedInprogress, setFetchedInprogress] = useState('')\n  const [inProgress, setInProgress] = useState('')\n\n  useEffect(()=>{\n    props.inprogressDataStatus(GET_INPROGRESS_REQUESTED)\n    const inprogresss = fetchInprogress().then((result)=>{\n      props.inprogressDataStatus(GET_INPROGRESS_SUCCEEDED)\n      props.inprogressCommit(result)\n    })\n  }, [])\n\n  useEffect(()=>{\n    (props.i)\n  }, [props.inprogress])\n\n  useEffect(()=>{\n    console.log(fetchedInprogress);\n    const data = Array.from(fetchedInprogress).map((item)=>{\n      return <li key={item.id}>{item.body}</li>\n    })\n    setInProgress(data)\n  }, [fetchedInprogress])\n\n\n  return(\n    <div id=\"inprogress-container\">\n      <p className=\"container-title orange-title\">InProgress</p>\n      <ul id=\"inprogress-list\">\n        {props.loader? <div><div id=\"spinner\"></div> <p style={{color: 'gray'}}>fetching data..</p></div> : inProgress}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps)=>{\n  const {inprogress, loader, err} = state;\n  return{\n    inprogress: inprogress,\n    loader: loader\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return{\n    inprogressCommit: (data)=>{dispatch(inprogressCommit(data))},\n    inprogressDataStatus: (data)=>{ dispatch(dataStatus(data)) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InProgress)\n"]},"metadata":{},"sourceType":"module"}