{"ast":null,"code":"import _slicedToArray from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/inprogress.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchInprogress } from '../requests/fetchApi';\nimport { inprogressCommit } from '../actions/getDataActions';\nimport { GET_INPROGRESS_REQUESTED, GET_INPROGRESS_SUCCEEDED, GET_INPROGRESS_FAILED } from '../requests/fetchState';\nimport { dataStatus } from '../actions/dataStatusActions';\n\nfunction InProgress(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchedInprogress = _useState2[0],\n        setFetchedInprogress = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inProgress = _useState4[0],\n        setInProgress = _useState4[1];\n\n  useEffect(() => {\n    props.dataStatus(GET_INPROGRESS_REQUESTED);\n    const inprogresss = fetchInprogress().then(result => {\n      props.inprogressCommit(result); // props.inprogressCommit({type: 'inprogress-data', body: result})\n      // return result.reverse().map((item)=>{\n      //   return <li key={item.id}>{item.body}</li>\n      // })\n    }); // inprogresss.then((result)=>{setInProgress(result)})\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"inprogress-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"container-title orange-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"InProgress\"), React.createElement(\"ul\", {\n    id: \"inprogress-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, inProgress || React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    style: {\n      color: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"fetching data..\"))));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    inprogress: state.inprogress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inprogressCommit: data => {\n      dispatch(inprogressCommit(data));\n    },\n    inprogressDataStatus: data => {\n      dispatch(dataStatus(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InProgress);","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/components/inprogress.js"],"names":["React","useState","useEffect","connect","fetchInprogress","inprogressCommit","GET_INPROGRESS_REQUESTED","GET_INPROGRESS_SUCCEEDED","GET_INPROGRESS_FAILED","dataStatus","InProgress","props","fetchedInprogress","setFetchedInprogress","inProgress","setInProgress","inprogresss","then","result","color","mapStateToProps","state","ownProps","inprogress","mapDispatchToProps","dispatch","data","inprogressDataStatus"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,wBAAR,EAAkCC,wBAAlC,EAA4DC,qBAA5D,QAAwF,wBAAxF;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA,oBAE0BV,QAAQ,CAAC,EAAD,CAFlC;AAAA;AAAA,QAEjBW,iBAFiB;AAAA,QAEEC,oBAFF;;AAAA,qBAGYZ,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGjBa,UAHiB;AAAA,QAGLC,aAHK;;AAKxBb,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAACF,UAAN,CAAiBH,wBAAjB;AACA,UAAMU,WAAW,GAAGZ,eAAe,GAAGa,IAAlB,CAAwBC,MAAD,IAAU;AACnDP,MAAAA,KAAK,CAACN,gBAAN,CAAuBa,MAAvB,EADmD,CAEnD;AACA;AACA;AACA;AACD,KANmB,CAApB,CAFY,CASZ;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE;AAAK,IAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAI,IAAA,EAAE,EAAC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,OAA8B;AAAG,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9B,CADjB,CAFF,CADF;AAQD;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACzC,SAAM;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACE;AADd,GAAN;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACrC,SAAM;AACJpB,IAAAA,gBAAgB,EAAGqB,IAAD,IAAQ;AAACD,MAAAA,QAAQ,CAACpB,gBAAgB,CAACqB,IAAD,CAAjB,CAAR;AAAiC,KADxD;AAEJC,IAAAA,oBAAoB,EAAGD,IAAD,IAAQ;AAAED,MAAAA,QAAQ,CAAChB,UAAU,CAACiB,IAAD,CAAX,CAAR;AAA4B;AAFxD,GAAN;AAID,CALD;;AAOA,eAAevB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {fetchInprogress} from '../requests/fetchApi'\nimport {inprogressCommit} from '../actions/getDataActions'\nimport {GET_INPROGRESS_REQUESTED, GET_INPROGRESS_SUCCEEDED, GET_INPROGRESS_FAILED} from '../requests/fetchState'\nimport {dataStatus} from '../actions/dataStatusActions'\n\nfunction InProgress(props){\n\n  const [fetchedInprogress, setFetchedInprogress] = useState('')\n  const [inProgress, setInProgress] = useState('')\n\n  useEffect(()=>{\n    props.dataStatus(GET_INPROGRESS_REQUESTED)\n    const inprogresss = fetchInprogress().then((result)=>{\n      props.inprogressCommit(result)\n      // props.inprogressCommit({type: 'inprogress-data', body: result})\n      // return result.reverse().map((item)=>{\n      //   return <li key={item.id}>{item.body}</li>\n      // })\n    })\n    // inprogresss.then((result)=>{setInProgress(result)})\n  }, [])\n\n  return(\n    <div id=\"inprogress-container\">\n      <p className=\"container-title orange-title\">InProgress</p>\n      <ul id=\"inprogress-list\">\n        {inProgress || <div><div id=\"spinner\"></div> <p style={{color: 'gray'}}>fetching data..</p></div>}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps)=>{\n  return{\n    inprogress: state.inprogress\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return{\n    inprogressCommit: (data)=>{dispatch(inprogressCommit(data))},\n    inprogressDataStatus: (data)=>{ dispatch(dataStatus(data)) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InProgress)\n"]},"metadata":{},"sourceType":"module"}