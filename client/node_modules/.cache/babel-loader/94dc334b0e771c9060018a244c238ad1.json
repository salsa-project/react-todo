{"ast":null,"code":"import _objectSpread from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { fetchTodo, fetchInprogress, fetchDone } from '../requests/fetchApi';\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: [],\n  loader: {\n    todo: false,\n    inprogress: false,\n    done: false\n  },\n  err: {\n    todo: false,\n    inprogress: false,\n    done: false\n  }\n};\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    //data status part\n    case 'gettodorequested':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: true,\n          inprogress: false,\n          done: false\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'gettodosucceeded':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: false,\n          inprogress: false,\n          done: false\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'getinprogressrequested':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: false,\n          inprogress: true,\n          done: false\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'getinprogresssucceeded':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: false,\n          inprogress: true,\n          done: false\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'getdonerequested':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: false,\n          inprogress: false,\n          done: true\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'getdonesucceeded':\n      return _objectSpread({}, state, {\n        loader: {\n          todo: false,\n          inprogress: false,\n          done: false\n        },\n        err: {\n          todo: false,\n          inprogress: false,\n          done: false\n        }\n      });\n      break;\n\n    case 'todo-data':\n      return _objectSpread({}, state, {\n        todo: action.body\n      });\n      break;\n\n    case 'inprogress-data':\n      return _objectSpread({}, state, {\n        inprogress: action.body\n      });\n      break;\n\n    case 'done-data':\n      return _objectSpread({}, state, {\n        done: action.body\n      });\n      break;\n\n    case 'add_todo':\n      return _objectSpread({}, state, {\n        todo: [...state.todo, action.body]\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/reducers/rootReducer.js"],"names":["fetchTodo","fetchInprogress","fetchDone","initState","todo","inprogress","done","loader","err","rootReducer","state","action","type","body"],"mappings":"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","sourcesContent":["import {fetchTodo, fetchInprogress, fetchDone} from '../requests/fetchApi'\n\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: [],\n  loader: {\n    todo: false,\n    inprogress: false,\n    done: false\n  },\n  err: {\n    todo: false,\n    inprogress: false,\n    done: false\n  }\n};\n\nconst rootReducer = (state = initState, action)=>{\n\n  switch(action.type){\n    //data status part\n    case 'gettodorequested':\n      return{\n        ...state,\n        loader: {todo: true, inprogress: false, done: false},\n        err: {todo: false, inprogress: false, done: false}\n      }\n      break;\n      case 'gettodosucceeded':\n        return{\n          ...state,\n          loader: {todo: false, inprogress: false, done: false},\n          err: {todo: false, inprogress: false, done: false}\n        }\n        break;\n      case 'getinprogressrequested':\n        return{\n          ...state,\n          loader: {todo: false, inprogress: true, done: false},\n          err: {todo: false, inprogress: false, done: false}\n        }\n        break;\n      case 'getinprogresssucceeded':\n        return{\n        ...state,\n        loader: {todo: false, inprogress: true, done: false},\n        err: {todo: false, inprogress: false, done: false}\n        }\n        break;\n      case 'getdonerequested':\n        return{\n          ...state,\n          loader: {todo: false, inprogress: false, done: true},\n          err: {todo: false, inprogress: false, done: false}\n        }\n        break;\n      case 'getdonesucceeded':\n        return{\n        ...state,\n        loader: {todo: false, inprogress: false, done: false},\n        err: {todo: false, inprogress: false, done: false}\n        }\n        break;\n\n    case 'todo-data':\n      return{\n        ...state,\n        todo: action.body\n      }\n      break;\n    case 'inprogress-data':\n      return{\n        ...state,\n        inprogress: action.body\n      }\n      break;\n    case 'done-data':\n      return{\n        ...state,\n        done: action.body\n      }\n      break;\n    case 'add_todo':\n      return{\n        ...state,\n        todo: [...state.todo, action.body]\n      }\n      break;\n\n    default:\n      return state;\n  }\n\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}