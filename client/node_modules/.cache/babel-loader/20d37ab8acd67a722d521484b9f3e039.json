{"ast":null,"code":"import _objectSpread from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { fetchTodo, fetchInprogress, fetchDone } from '../requests/fetchApi';\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case 'todo-data':\n      return _objectSpread({}, state, {\n        todo: action.body\n      });\n      break;\n\n    case 'inprogress-data':\n      return _objectSpread({}, state, {\n        inprog: action.body\n      });\n      break;\n\n    case 'gettodorequested':\n      break;\n\n    case 'gettodosucceeded':\n      break;\n\n    case 'gettodofailed':\n      break;\n  }\n\n  if (action.type == 'add todo') {\n    return state;\n  } else {\n    return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/reducers/rootReducer.js"],"names":["fetchTodo","fetchInprogress","fetchDone","initState","todo","inprogress","done","rootReducer","state","action","console","log","type","body","inprog"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,eAAnB,EAAoCC,SAApC,QAAoD,sBAApD;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAAlB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA6B;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,+BACKJ,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAFf;AAIA;;AACA,SAAK,iBAAL;AACE,+BACKL,KADL;AAEEM,QAAAA,MAAM,EAAEL,MAAM,CAACI;AAFjB;AAIA;;AACJ,SAAK,kBAAL;AAEE;;AACF,SAAK,kBAAL;AAEE;;AACF,SAAK,eAAL;AAEE;AArBJ;;AAwBA,MAAGJ,MAAM,CAACG,IAAP,IAAe,UAAlB,EAA6B;AAC3B,WAAOJ,KAAP;AACD,GAFD,MAEK;AACH,WAAOA,KAAP;AACD;AAEF,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import {fetchTodo, fetchInprogress, fetchDone} from '../requests/fetchApi'\n\nconst initState = {\n  todo: [],\n  inprogress: [],\n  done: []\n};\n\nconst rootReducer = (state = initState, action)=>{\n  console.log(action);\n\n  switch(action.type){\n    case 'todo-data':\n      return{\n        ...state,\n        todo: action.body\n      }\n      break;\n      case 'inprogress-data':\n        return{\n          ...state,\n          inprog: action.body\n        }\n        break;\n    case 'gettodorequested':\n\n      break;\n    case 'gettodosucceeded':\n\n      break;\n    case 'gettodofailed':\n\n      break;\n  }\n\n  if(action.type == 'add todo'){\n    return state\n  }else{\n    return state\n  }\n\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}