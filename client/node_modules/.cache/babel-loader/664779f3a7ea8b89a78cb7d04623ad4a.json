{"ast":null,"code":"import _slicedToArray from \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Todo from './components/todo.js';\nimport InProgress from './components/inprogress.js';\nimport Done from './components/done.js';\nimport './App.css';\n\nfunction App() {\n  //newTodoLayout display style (display/hide)\n  const _useState = useState('none'),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTodoDisplay = _useState2[0],\n        setNewTodoDisplay = _useState2[1]; //newTodo text\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newTodoText = _useState4[0],\n        setNewTodoText = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        reloadTodos = _useState6[0],\n        setReloadTodos = _useState6[1]; //display/hide newTodoLayout container\n\n\n  function newTodoLayoutDisplay(e) {\n    newTodoDisplay == 'none' ? setNewTodoDisplay('flex') : setNewTodoDisplay('none');\n  } //display the newTodo text in the input\n\n\n  function newTodoInputHandler(e) {\n    setNewTodoText(e.target.value);\n  } // adding new todo to \n\n\n  function addNewTodoHandler(e) {\n    if (newTodoText.length < 3) return;\n    let newTodoStore = newTodoText;\n    fetch(\"/newTodo\", {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        body: newTodoStore\n      })\n    }).then(response => {\n      response.json().then(data => {\n        if (data.status) {\n          setReloadTodos(true);\n          setReloadTodos(false);\n          setNewTodoText('');\n        }\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Call out API\"), React.createElement(\"p\", {\n    id: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, ''), React.createElement(\"div\", {\n    id: \"manager\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    reloadTodos: reloadTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(InProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Done, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    id: \"new-todo-input-display\",\n    onClick: newTodoLayoutDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"div\", {\n    id: \"new-todo-input\",\n    style: {\n      display: newTodoDisplay\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: newTodoText,\n    onChange: newTodoInputHandler,\n    placeholder: \"new todo..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addNewTodoHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mrsalsa/Desktop/Node.js Lessons/React.js/React 04-01-2020/fullstack-mern/client/src/App.js"],"names":["React","useState","useEffect","Todo","InProgress","Done","App","newTodoDisplay","setNewTodoDisplay","newTodoText","setNewTodoText","reloadTodos","setReloadTodos","newTodoLayoutDisplay","e","newTodoInputHandler","target","value","addNewTodoHandler","length","newTodoStore","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport Todo from './components/todo.js'\nimport InProgress from './components/inprogress.js'\nimport Done from './components/done.js'\nimport './App.css';\n\nfunction App() {\n\n  //newTodoLayout display style (display/hide)\n  const [newTodoDisplay, setNewTodoDisplay] = useState('none');\n  //newTodo text\n  const[newTodoText, setNewTodoText] = useState('');\n\n  const [reloadTodos, setReloadTodos] = useState(false);\n\n  //display/hide newTodoLayout container\n  function newTodoLayoutDisplay(e){\n    (newTodoDisplay == 'none')? setNewTodoDisplay('flex'): setNewTodoDisplay('none');\n  }\n  //display the newTodo text in the input\n  function newTodoInputHandler(e){\n    setNewTodoText(e.target.value);\n  }\n  // adding new todo to \n  function addNewTodoHandler(e){\n    if(newTodoText.length < 3) return ;\n    let newTodoStore = newTodoText;\n\n    fetch(\"/newTodo\", {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    //make sure to serialize your JSON body\n    body: JSON.stringify({\n        body: newTodoStore\n      })\n    }).then((response) => {\n      response.json().then((data)=>{\n        if(data.status){\n          setReloadTodos(true);\n          setReloadTodos(false);\n          setNewTodoText('');\n        }\n      })\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h2 id=\"title\">Call out API</h2>\n      <p id=\"description\">{''}</p>\n      <div id=\"manager\">\n        <Todo reloadTodos={reloadTodos} />\n        <InProgress />\n        <Done />\n      </div>\n      <button id=\"new-todo-input-display\" onClick={newTodoLayoutDisplay}>+</button>\n      <div id=\"new-todo-input\" style={{display: newTodoDisplay}}>\n        <input type=\"text\" value={newTodoText} onChange={newTodoInputHandler} placeholder=\"new todo..\" />\n        <button onClick={addNewTodoHandler}>Add</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}